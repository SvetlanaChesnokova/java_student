apply plugin: 'java'

//откуда надо загружать библиотеки
repositories{
  mavenCentral()
}

//указание зависимости, добавление новой библиотеки
dependencies {
  //библиотека скопирована с сайта http://search.maven.org/
  compile 'org.testng:testng:6.9.13.6'
  //библиотека для протоколирования данных, сайт документации http://logback.qos.ch/manual/configuration.html
  compile 'ch.qos.logback:logback-classic:1.1.7'
  //compile 'org.seleniumhq.selenium:selenium-java:3.0.1'
  compile 'org.seleniumhq.selenium:selenium-java:2.53.1'
  //Hamcrest: улучшение внешнего вида проверок
  compile 'org.hamcrest:java-hamcrest:2.0.0.0'

  //Передача файлов на удалённую машину по протоколу FTP Гиперссылка
  compile 'commons-net:commons-net:3.5'

  //для работы с почтой
  compile 'org.subethamail:subethasmtp:3.1.7'

 //для построения регулярных выражений
  compile 'ru.lanwen.verbalregex:java-verbal-expressions:1.4'

  //для работы с БД mysql, сайт документации http://dev.mysql.com/doc/connector-j/5.1/en/connector-j-usagenotes-connect-drivermanager.html
  compile 'mysql:mysql-connector-java:6.0.5'

  // для соединения с БД, сайт документации http://docs.jboss.org/hibernate/orm/5.1/quickstart/html_single/
  compile 'org.hibernate:hibernate-core:5.2.5.Final'

  compile 'com.thoughtworks.xstream:xstream:1.4.9'

  compile 'com.google.code.gson:gson-parent:2.8.0'

  //SOAP шаблон для проекта mantis
  compile 'biz.futureware.mantis:mantis-axis-soap-client:1.2.19'



  //запуск всех тестов, через командную строку cmd
// прописать в ней (cmd) gradlew test , при этом путь в консоле должен соответствовать репозиторию
  // чтобы отчистить запуски тестов и запустить повторно в cmd надо указать: gradlew cleanTest test
  test {
    useTestNG() {
      // если прописать такой путь, то запускается конкретные тесты, что в файле
      suites 'src/test/resources/testng.xml'
    }
  }


  test  {
    useTestNG {
      suites 'src/test/resources/testng.xml'
    }
    //для обращения к этому свойству,при запусе теста через cmd надо написать -Pbrowser
    // полный текст команды, для примера: gradlew -Pbrowser=firefox testContacts
    //позволяет указывать-выбирать любой браузер, browser
    if (project.hasProperty('browser')) {
      systemProperty 'browser', "${browser}"
    }
    //для обращения к этому свойству(запуск конфигурационного файла),при запусе теста через cmd надо написать -Ptarget
    // полный текст команды, для примера: gradlew -Ptarget=local testContacts
    //описывает свойства окружения
    if (project.hasProperty('target')) {
      systemProperty 'target', "${target}"
    }
    //позволяет включать и отключать сложные проверки, через интерфейс (конфигурационный файл)
    if (project.hasProperty('verifyUI')) {
      systemProperty 'verifyUI', "${target}"
    }
  }

}
buildscript{
  repositories{
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath 'no.nils:wsdl2java:0.10'
  }
}
apply plugin: 'no.nils.wsdl2java'

wsdl2java {
  //куда будут размещены файлы, которые генерируются из этого описания
  generatedWsdlDir = file("src/main/java")  // target directory for generated source coude
  //где будут браться файлы
  wsdlDir = file("src/main/resources") // define to support incremental build
  wsdlsToGenerate = [   //  2d-array of wsdls and cxf-parameters
                        ['src/main/resources/geoipservice.wsdl'],
  ]
}